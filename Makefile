#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.101                       #
#------------------------------------------------------------------------------#


WRKDIR = `pwd`

AS = as
CC = gcc
CPP = g++
F77 = f77
F9X = gfortran
LD = g++
AR = ar
RANLIB = ranlib
WINDRES = windres

INC =  -I/usr/lib/glib-2.0/include/ -I/usr/include/glib-2.0/ -I/usr/include/libxml2 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include/ -I/usr/include/libusb-1.0/ -Iinclude -I/usr/lib/i386-linux-gnu/glib-2.0/include/
CFLAGS =  -Wall `wx-config --cflags` -Winvalid-pch -include wx_pch.h -DWX_PRECOMP
RESINC = 
RCFLAGS = 
LIBDIR = 
LIB =  -lopenobex -lxml2 -ludev
LDFLAGS =  `wx-config --libs` -lusb-1.0 -lglib-2.0

INC_DEBUG =  $(INC)
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG =  $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/LibreScribe

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -O3
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  -s $(LDFLAGS)
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/LibreScribe

OBJ_DEBUG = $(OBJDIR_DEBUG)/DeviceInfo.o $(OBJDIR_DEBUG)/GUIFrame.o $(OBJDIR_DEBUG)/LibreScribe.o $(OBJDIR_DEBUG)/src/BackgroundMonitor.o $(OBJDIR_DEBUG)/src/Smartpen.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/DeviceInfo.o $(OBJDIR_RELEASE)/GUIFrame.o $(OBJDIR_RELEASE)/LibreScribe.o $(OBJDIR_RELEASE)/src/BackgroundMonitor.o $(OBJDIR_RELEASE)/src/Smartpen.o

all: before_build build_Debug build_Release after_build

clean: clean_Debug clean_Release

before_build: 
	cd $(PROJECT_DIRECTORY)
	rm -rfv ./bin

after_build: 
	cd $(PROJECT_DIRECTORY)
	find ./bin/ -mindepth 1 -type d | xargs -n 1 cp -rfv -L ./res
	find ./bin/ -mindepth 1 -type d | xargs -n 1 cp -fv -L ./stf.py ./parsestf.py

before_Debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src

after_Debug: 

build_Debug: before_Debug out_Debug after_Debug

Debug: before_build build_Debug after_build

out_Debug: $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LDFLAGS_DEBUG) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/DeviceInfo.o: DeviceInfo.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/DeviceInfo.o DeviceInfo.cpp

$(OBJDIR_DEBUG)/GUIFrame.o: GUIFrame.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/GUIFrame.o GUIFrame.cpp

$(OBJDIR_DEBUG)/LibreScribe.o: LibreScribe.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/LibreScribe.o LibreScribe.cpp

$(OBJDIR_DEBUG)/src/BackgroundMonitor.o: src/BackgroundMonitor.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/BackgroundMonitor.o src/BackgroundMonitor.cpp

$(OBJDIR_DEBUG)/src/Smartpen.o: src/Smartpen.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/Smartpen.o src/Smartpen.cpp

clean_Debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/src

before_Release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src

after_Release: 

build_Release: before_Release out_Release after_Release

Release: before_build build_Release after_build

out_Release: $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/DeviceInfo.o: DeviceInfo.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/DeviceInfo.o DeviceInfo.cpp

$(OBJDIR_RELEASE)/GUIFrame.o: GUIFrame.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/GUIFrame.o GUIFrame.cpp

$(OBJDIR_RELEASE)/LibreScribe.o: LibreScribe.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/LibreScribe.o LibreScribe.cpp

$(OBJDIR_RELEASE)/src/BackgroundMonitor.o: src/BackgroundMonitor.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/BackgroundMonitor.o src/BackgroundMonitor.cpp

$(OBJDIR_RELEASE)/src/Smartpen.o: src/Smartpen.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/Smartpen.o src/Smartpen.cpp

clean_Release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/src

.PHONY: before_build after_build before_Debug after_Debug clean_Debug before_Release after_Release clean_Release

